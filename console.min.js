/*!
 * https://github.com/wusfen/console.js
 */
!function(){function e(e){var r={},o=/<style .*?>([\w\W]*?)<\/style>/i,t=(e.match(o)||[])[1],n=document.createElement("div");return n.innerHTML=e.replace(o,""),function i(e){var o=e.className;if(o){r[o]=e;var n=RegExp("\\."+o+"\\s*?\\{([\\w\\W]*?)\\}");e.setAttribute("style",(t.match(n)||[])[1]),e.removeAttribute("class")}for(var a=e.children,l=0;l<a.length;l++){var s=a[l];i(s)}}(n),r}function r(e){var r=s.row.cloneNode(!0),o=i(e);r.innerHTML=o,s.list.appendChild(r),s.listw.scrollTop=999999,s.list.scrollTop=999999}function o(){}function t(e){var r=s.cmd.cloneNode(!0);r.innerHTML="> "+e.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\n/g,"<br>"),s.list.appendChild(r),e=e.match(/^\s*{/)?"("+e+")":e;try{p.log(window.eval(e))}catch(o){throw o}}function n(e){return{}.toString.call(e).match(/ (.*)\]/)[1].toLowerCase()}function i(e,r){if(r=r||0,r>2)return"...";if("array"==n(e)){for(var o="[",t=0;t<e.length;t++)o+=i(e[t])+", ";return o=o.replace(/, $/,""),o+="]"}if("object"==n(e)){for(var o="{\n",a={},t=0;t<(e||{}).length;t++){var l=e[t];void 0!==l&&(a[t]=l)}for(var t in e)a[t]=e[t];var s=10,p=0;for(var t in a)o+=p++>s?".":Array(r+2).join("　")+'"'+t+'": '+i(a[t],r+1)+",\n";return o=o.replace(/,\n$/,""),o+="\n"+Array(r+1).join("　")+"}"}return"string"==typeof e?'<sub style="color:red">"</sub>'+e.replace(/\n/g,"<br>").replace(/</g,"&lt;").replace(/>/g,"&gt;")+'<sub style="color:red">"</sub>':e+""}function a(e){for(var r=[],o=e.length;o--;)r[o]=e[o];return r}if(location.href.match(/[?&]console/)){var l='    <style type="text/css"> .console {font-size: 10px; line-height: 1.1; position: fixed; -position: absolute; z-index: 9999999999; bottom: 0; right: 0; width: 800px; width: 100%; max-width: 100%; text-shadow: 1px 1px 2px rgb(0, 140, 160); color: #1900FF; } .listw {height: 120px; overflow: auto; overflow-x: hidden; padding-right: 16px; width: 100%; margin-right: -16px; } .list {margin-top: 120px; max-height: 100px; -height: 250px; overflow: auto; padding-right: 32px; margin-right: -32px; width: 100%; background: rgba(255, 255, 255, .8); box-shadow: 0 -5px 15px rgba(1, 1, 1, 0.1); } .cmd {margin: 0; border-bottom: solid 1px #eee; margin-bottom: -1px; padding: 6px; white-space: pre-wrap; word-wrap: break-word; color: red; padding-left: 1.5em; text-indent: -1em; } .row {margin: 0; border-bottom: solid 1px #eee; margin-bottom: -1px; padding: 6px; white-space: pre-wrap; word-wrap: break-word; } .input {display: block; width: 100%; border: none; border-top: solid 1px #eee; outline: none; background: rgba(255, 255, 255, .8); height: 30px; box-shadow: 0 -8px 10px rgba(255, 255, 255, 0.8); } </style> <div class="console"> <div class="listw"> <div class="list"> <pre class="cmd">...</pre> <pre class="row">...</pre> </div> </div> <textarea class="input" placeholder="run js" autofocus></textarea> </div>',s=e(l);s.list.innerHTML="",setTimeout(function(){document.body.appendChild(s.console),s.listw.scrollTop=999999},100),winConsole=window.console||(window.console={log:o,dir:o,info:o,warn:o,error:o});var p={run:t,log:function(){for(var e=0;e<arguments.length;e++)r(arguments[e])},dir:r,error:r};for(var d in p)!function(){var e=winConsole[d];winConsole[d]=function(){e.apply(winConsole,arguments),p[d].apply(p,arguments)}}();s.input.onkeydown=function(){return 13==event.keyCode&&""===this.value?(s.list.innerHTML="",!1):13!=event.keyCode||this.value.match(/;\s{0,2}$/)?void 0:(p.run(this.value),this.value="",!1)},onerror=function(){p.error(a(arguments))}}}();